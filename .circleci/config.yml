# TODO: learn how to reuse parts of a config yaml file to reduce
#       code duplication
#       i.e. restoring caches / workspaces

version: 2
jobs:
  create_workspace:
    docker:
      - image: parlezvous/ci-base:0.4.0
    steps:
      - run:
          name: "Create workspace"
          command: |
            mkdir -p /tmp/workspace/node_modules
            mkdir -p /tmp/workspace/prisma

  install_deps:
    docker:
      - image: parlezvous/ci-base:0.4.0
    steps:
      - checkout
      - run:
          name: "Install Dependencies"
          command: |
            echo "Node version: $(node -v)"
            echo "npm version: $(npm -v)"
            npm install

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - node_modules
      - run:
          name: "Move node_modules to workspace"
          command: mv ./node_modules /tmp/workspace

  generate_prisma_client:
    docker:
      - image: parlezvous/ci-base:0.4.0
    steps:
      - checkout
      - run:
          name: "Generate Prisma Env File"
          command: echo "PRISMA_ENDPOINT=$PRISMA_ENDPOINT" > .prisma-env

      - run:
          name: "Generate Prisma Client"
          command: prisma generate --env-file .prisma-env

      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - prisma

      - run:
          name: "Move prisma files to workspace"
          command: mv .prisma-env ./src/prisma-client /tmp/prisma/prisma-client

  typecheck:
    docker:
      - image: parlezvous/ci-base:0.4.0
    steps:
      - checkout
      
      - attach_workspace:
          at: /tmp/workspace

      - run:
          name: "TypeCheck"
          command: |
            cp -r /tmp/workspace/node_modules ./node_modules
            cp -r /tmp/workspace/prisma/prisma-client ./src/prisma-client
            cp /tmp/workspace/prisma/.prisma-env ./prisma-env
            npm run typecheck
      
  lint:
    docker:
      - image: parlezvous/ci-base:0.4.0
    steps:
      - checkout
      - run:
          name: "Linting"
          command: echo "linting not implemented" && exit 0

  test:
    docker:
      - image: parlezvous/ci-base:0.4.0
    steps:
      - checkout
      - run:
          name: "Testing"
          command: echo "testing not implemented" && exit 0

  migrate:
    docker:
      - image: parlezvous/ci-base:0.4.0
    steps:
      - checkout
      - run:
          name: "Deploy Changes To Prisma Server"
          command: prisma deploy --env-file .prisma-env

  deploy:
    docker:
      - image: parlezvous/ci-base:0.4.0
    steps:
      - checkout
      - run:
          name: "Compile Project"
          command: npm run build
      - run:
          name: "Deploy Server"
          # Generate app.yaml for GAE
          # logs into gcloud
          # deploys to GAE
          command: |
            python generate-app-yaml.py > app.yaml
            echo $GCLOUD_SERVICE_ACCOUNT_KEY_FILE | base64 --decode > key.json
            gcloud auth activate-service-account --key-file=./key.json --project=$GCLOUD_PROJECT_ID
            gcloud app deploy --quiet

workflows:
  version: 2
  main:
    jobs:
      - create_workspace
      - install_deps:
          requires:
            - create_workspace
      - generate_prisma_client:
          requires:
            - create_workspace
      - typecheck:
          requires:
            - install_deps
            - generate_prisma_client
      - lint:
          requires:
            - install_deps
            - generate_prisma_client
      - test:
          requires:
            - install_deps
            - generate_prisma_client
      - migrate:
          filters:
            branches:
              only: master
          requires:
            - typecheck
            - lint
            - test
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - migrate
